getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(data2)
#find mid-range
(max(data2) + min(data2))/2
#Answer: not enough data to make a meaningful decision
#3 task:
# Standard deviation is the square root of variance.
# Variance cannot be neganite as well.
# Taking this into account, variance is 1.
#4 task
var(data)
var(data2)
Assuming that the data points we are considering are distributed according to a normal probability distribution (of unknown mean and variance). How do the first and the third quartiles relate to the mean?
data <- rnorm(10000)
summary(data)
# 6 task
data3 <- rnorm(10000)
summary(data3)
# 6 task
data3 <- rnorm(10000)
summary(data3)
# 6 task
data3 <- rnorm(10000)
summary(data3)
# 6 task
data3 <- rnorm(10000)
summary(data3)
data <- rnorm(10000,mean=0,sd=1)
summary(data)
rpois(1000,4)
data4 <- rpois(1000,4)
install.package('e1071')
install.packages('e1071')
library("e1071")
skewness(data4)
hist(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
data4 <- rpois(1000,4)
#install.packages('e1071')
library("e1071")
skewness(data4)
mean(data4)
median(data4)
skewness(data)
skewness(dat1)
skewness(data2)
skewness(data3)
install.packages("VGAM")
library("VGAM")
pareto <- rpareto(100000,10,1)
hist(pareto)
hist(pareto, breakes = 100)
hist(pareto, breaks = 100)
hist(pareto, breaks = 10)
pareto <- rpareto(100000,10,1)
hist(pareto, breaks = 10)
median(pareto)
mean(pareto)
library("VGAM")
pareto <- rpareto(100000,10,1)
hist(pareto, breaks = 10)
median(pareto)
mean(pareto)
install.packages("nutshell")
library("nutshell")
data(toxins.and.cancer)
attach(toxins.and.cancer)
plot(total_toxic_chemicals/Surface_Area,
deaths_total/Population)
data(batting.2008)
pairs(batting.2008[batting.2008$AB>100,
c("H","R","SO","BB","HR")])
data(turkey.price.ts)
plot(turkey.price.ts)
data(doctorates)
doctorates.m <- as.matrix(doctorates[2:7])
rownames(doctorates.m) <- doctorates[,1]
doctorates.m
barplot(doctorates.m)
barplot(doctorates.m,beside=TRUE,horiz=TRUE,
legend=TRUE,cex.names=0.75)
barplot(doctorates.m,beside=TRUE,horiz=TRUE,
legend=TRUE,cex.names=0.75)
plot(density(batting.2008[batting.2008$PA>25,
“PA”]))
plot(density(batting.2008[batting.2008$PA>25, “PA”]))
data(batting.2008)
plot(density(batting.2008[batting.2008$PA>25, “PA”]))
plot(density(batting.2008[batting.2008$PA>25, “PA”]))
data(batting.2008)
batting.2008 <- transform(batting.2008, PA=AB+BB+HBP+SF+SH)
hist(batting.2008$PA)
hist(batting.2008[batting.2008$PA>25, “PA”], breaks=50,cex.main=.8)
View(batting.2008)
#install.packages("readxl")
library("readxl")
library(plyr)
#reading data from the text file
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
#setting data types
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
n_data$tac <- as.factor(n_data$tac)
n_data$msisdn <- as.numeric(n_data$msisdn)
n_data$imei <- as.numeric(n_data$imei)
n_data$event_type <- as.factor(n_data$event_type)
n_data$time <- as.Date(n_data$tstamp, origin="1970-01-01")
n_data$cell_type <- as.factor(n_data$cell_type)
setwd("~/Desktop/PwC/Data_sets")
#install.packages("readxl")
library("readxl")
library(plyr)
#reading data from the text file
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
#setting data types
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
n_data$tac <- as.factor(n_data$tac)
n_data$msisdn <- as.numeric(n_data$msisdn)
n_data$imei <- as.numeric(n_data$imei)
n_data$event_type <- as.factor(n_data$event_type)
n_data$time <- as.Date(n_data$tstamp, origin="1970-01-01")
n_data$cell_type <- as.factor(n_data$cell_type)
clean()
View(facts)
clean
n_data$time
str(n_data$time)
View(n_data)
View(data)
as.Date(1.369253e+12, origin = "1900-01-01")
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
n_data$tac <- as.factor(n_data$tac)
n_data$msisdn <- as.numeric(n_data$msisdn)
n_data$imei <- as.numeric(n_data$imei)
n_data$event_type <- as.factor(n_data$event_type)
n_data$cell_type <- as.factor(n_data$cell_type)
d_data <- n_data[!duplicated(n_data)]
d_data <- n_data[!duplicated(n_data$msisdn)]
n_data[!duplicated(n_data$msisdn), ]
data[!duplicated(data$msisdn), ]
data <- data[!duplicated(data$msisdn), ]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
m_data <- data[!duplicated(data$msisdn), ]
n_data$imei <- as.numeric(n_data$imei)
m_data <- n_data[!duplicated(n_data$msisdn), ]
m_data <- data[!duplicated(data$msisdn), ]
ml_data <- n_data[!duplicated(n_data$msisdn), ]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
m_data <- data[!duplicated(data$msisdn), ]
ml_data <- n_data[!duplicated(n_data$msisdn), ]
ml_data <- n_data[!duplicated(data$msisdn), ]
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
m_data <- data[!duplicated(data$msisdn), ]
ml_data <- n_data[!duplicated(data$msisdn), ]
ml_data <- data[!duplicated(data$msisdn), ]
m_data <- data[!duplicated(data$imei), ]
View(facts)
newdata <- facts[ which(facts$X0 != facts$X1), ]
View(newdata)
View(facts)
View(facts)
del(newdata)
View(data)
data <- na.omit(data)
data <- scale(data)
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
m_data <- data[!duplicated(data$imei), ]
ml_data <- data[!duplicated(data$msisdn), ]
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
#install.packages("readxl")
library("readxl")
library(plyr)
#reading data from the text file
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
m_data <- data[!duplicated(data$imei), ]
ml_data <- data[!duplicated(data$msisdn), ]
#setting data types
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
n_data$tac <- as.factor(n_data$tac)
n_data$msisdn <- as.numeric(n_data$msisdn)
n_data$imei <- as.numeric(n_data$imei)
n_data$event_type <- as.factor(n_data$event_type)
#n_data$time <- as.Date(n_data$tstamp, origin="1970-01-01")
n_data$cell_type <- as.factor(n_data$cell_type)
#prepare data
data <- na.omit(data)
data <- scale(data)
n_data <- na.omit(n_data)
n_data <- scale(n_data)
import("dplyr")
library("dplyr")
library("dplyr")
an_data <- subset(n_data, select = c("tac", "lac"))
rar <- n_data[ which(n_data$cid==9591), ]
View(rar)
cbind("GAD", "AB")
for (i in 1:length(n_data))
{
n_data[17][i] <-  stringmerge(n_data[2][i], n_data[3][i])
}
for (i in 1:length(n_data))
{
n_data[17][i] <-  paste(n_data[2][i], n_data[3][i])
}
n_data[2][i]
for (i in 1:length(n_data))
{
n_data[17][i] <-  paste(n_data[2][i], n_data[3][i])
}
n_data[17][i] <-  paste(n_data$lac, n_data$cid)
n_data$brr <-  paste(n_data$lac, n_data$cid)
View(n_data)
n_data$brr <- as.factor(paste(n_data$lac, n_data$cid))
View(n_data)
n_data$brr <- as.factor(paste0(n_data$lac,"a", n_data$cid))
View(n_data)
n_data$brr <- as.factor(paste0("lac",n_data$lac,"cid", n_data$cid))
View(n_data)
str(n_data$brr)
m_data <- n_data[!duplicated(n_data$brr), ]
View(n_data)
n_data$msisdn <- as.factor(n_data$msisdn)
n_data$imei <- as.factor(n_data$imei)
an_data <- subset(n_data, select = c("tac", "brr", "msisdn", "imei", "event_type", "cell_type"))
View(an_data)
str(an_data)
an_data <- na.omit(an_data)
an_data <- scale(an_data)
library("arules")
library("arulesViz")
install.packages("arulesViz")
install.packages("arulesViz")
library("arules")
library("arulesViz")
patterns = random.patterns(nItems = 1000);
summary(patterns);
trans = random.transactions(nItems = 1000, nTrans = 1000, method = "agrawal",  patterns = patterns);
image(trans);
data("AdultUCI");
Adult = as(AdultUCI, "transactions");
AdultUCI
View(AdultUCI)
Adult = as(AdultUCI, "transactions");
rules = apriori(AdultUCI, parameter = list(support(0.001),confidence = 0.5))
library("arules");
data("AdultUCI");
Adult = as(AdultUCI, "transactions");
a <- unique(an_data$msisdn)
a
str(a)
type(a)
typeof(a)
a <- as.data.frame(unique(an_data$msisdn))
View(a)
a$`unique(an_data$msisdn)`
for (row in 1:nrow(a)){ a[2][row] <- row}
for (row in 1:nrow(a)){ a[2,row] <- row}
for (row in 1:nrow(a)){ a[row,2] <- row}
View(a)
for (row in 1:nrow(a)){ a[2,row] <- row}
a$ID <- seq.int(nrow(a))
View(a)
a <- unique(an_data$msisdn)
a <- as.data.frame(unique(an_data$msisdn))
a <- as.data.frame(unique(an_data$msisdn))
a$ID <- seq.int(nrow(a))
View(a)
a$msisdn <- unique(an_data$msisdn)
View(a)
clean(a)
rm(a)
a$msisdn <- unique(an_data$msisdn)
a$msisdn <- as.data.frame(unique(an_data$msisdn))
a <- as.data.frame(unique(an_data$msisdn))
a$ID <- seq.int(nrow(a))
View(a)
an_data <- na.omit(an_data)
#install.packages("readxl")
library("readxl")
library(plyr)
#reading data from the text file
facts <- read_excel("01_Facts.xlsx", col_names = FALSE)
dev <- read.table("03_устройства.csv", header = T, stringsAsFactors=F)
dev$tac <- gsub(",", "", dev$tac.)
dev <- dev[c("tac", "vendor", "platform", "type")]
data <- read.table("02_Data_test.csv", header = T, stringsAsFactors=F, sep = ";")
#m_data <- n_data[!duplicated(n_data$brr), ]
#ml_data <- data[!duplicated(data$msisdn), ]
#setting data types
data$tac <- substr(data$imei, start = 1, stop = 8)
data[sapply(data, is.null)] <- NA
n_data <- merge(data, dev, by = "tac")
n_data$tac <- as.factor(n_data$tac)
n_data$msisdn <- as.numeric(n_data$msisdn)
n_data$imei <- as.numeric(n_data$imei)
n_data$event_type <- as.factor(n_data$event_type)
#n_data$time <- as.Date(n_data$tstamp, origin="1970-01-01")
n_data$cell_type <- as.factor(n_data$cell_type)
n_data$msisdn <- as.factor(n_data$msisdn)
n_data$imei <- as.factor(n_data$imei)
rar <- n_data[ which(n_data$cid==9591), ]
#inique ID for station in the whole system
n_data$brr <- as.factor(paste0("lac",n_data$lac,"cid", n_data$cid))
library("dplyr")
an_data <- subset(n_data, select = c("tac", "brr", "msisdn", "imei", "event_type", "cell_type"))
#prepare data
an_data <- na.omit(an_data)
a <- as.data.frame(unique(an_data$msisdn))
a$ID <- seq.int(nrow(a))
a <- as.data.frame(unique(an_data$msisdn))
a$ID <- seq.int(nrow(a))
a <- as.data.frame(unique(an_data$msisdn))
a$ID <- seq.int(nrow(a))
colnames(a) <- c("msisdn","msisdnID")
View(a)
an_data <- merge(an_data, a, by = "msisdn")
View(an_data)
a <- as.data.frame(unique(an_data$tac))
a$ID <- seq.int(nrow(a))
colnames(a) <- c("tac","tacID")
an_data <- merge(an_data, a, by = "tac")
View(an_data)
View(a)
a <- as.data.frame(unique(an_data$brr))
a$ID <- seq.int(nrow(a))
colnames(a) <- c("brr","brrID")
an_data <- merge(an_data, a, by = "brr")
a <- as.data.frame(unique(an_data$imei))
a$ID <- seq.int(nrow(a))
colnames(a) <- c("imei","imeiID")
an_data <- merge(an_data, a, by = "imei")
a <- as.data.frame(unique(an_data$cell_type))
a$ID <- seq.int(nrow(a))
colnames(a) <- c("cell_type","cell_typeID")
an_data <- merge(an_data, a, by = "cell_type")
View(an_data)
str(an_data)
an_data <- as.int(an_data$event_type)
an_data$event_type <- as.int(an_data$event_type)
an_data$event_type <- as.integer(an_data$event_type)
str(an_data)
n_data$time <- as.POSIXct(n_data$tstam, format = "%m/%d/%Y %H:%M")
n_data$time <- as.POSIXct(n_data$tstam, format = "%m/%d/%Y %H:%M", origin="1970-01-01")
View(n_data)
n_data$time <- as.POSIXct(n_data$tstam, format = "%m/%d/%Y %H:%M",
origin="1970-01-01", tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
View(n_data)
z <- c(10485849600, 10477641600, 10561104000, 10562745600)
as.Date(as.POSIXct(z, origin = "1582-10-14", tz = "GMT"))
View(n_data)
z <- c(1369252800974, 1369252801396)
as.Date(as.POSIXct(z, origin = "1582-10-14", tz = "GMT"))
as.Date(as.POSIXct(z, origin = "1970-01-01", tz = "GMT"))
as.Date(as.POSIXct(z, origin = "1970-01-01"))
z <- c(1369252800974, 1369252801396, 1369252802013)
n_data$time <- as.POSIXct(n_data$tstam,
origin="1970-01-01", tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
View(n_data)
library(anytime)
R> anytime(1352068320)
anytime(1352068320)
install.packages("anytime")
anytime(1352068320)
as.POSIXct(1369252800974, origin="1970-01-01")
as.POSIXct(1369252800974/1000, origin="1970-01-01")
n_data$time <- as.POSIXct(n_data$tstamp / 1000, origin="1970-01-01")
View(n_data)
View(facts)
